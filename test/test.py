import cv2

# Danh sách tọa độ [min_x, min_y, max_x, max_y]
bounding_boxes = [
[37, 35, 1212, 844]
,
[1108, 794, 1205, 827]
,
[1009, 794, 1106, 827]
,
[910, 794, 1007, 827]
,
[787, 794, 907, 827]
,
[687, 794, 785, 826]
,
[587, 794, 684, 826]
,
[153, 794, 297, 826]
,
[78, 794, 150, 826]
,
[43, 794, 75, 826]
,
[446, 793, 584, 826]
,
[363, 793, 443, 826]
,
[300, 793, 360, 826]
,
[1109, 758, 1205, 791]
,
[1010, 758, 1106, 791]
,
[910, 758, 1007, 791]
,
[788, 758, 907, 791]
,
[687, 758, 785, 791]
,
[587, 758, 684, 791]
,
[446, 758, 584, 791]
,
[363, 758, 443, 791]
,
[300, 758, 360, 791]
,
[152, 758, 297, 791]
,
[78, 758, 149, 791]
,
[43, 758, 75, 791]
,
[1109, 722, 1205, 755]
,
[1010, 722, 1106, 755]
,
[910, 722, 1007, 755]
,
[787, 722, 907, 755]
,
[687, 722, 785, 755]
,
[587, 722, 684, 755]
,
[446, 722, 584, 755]
,
[362, 722, 443, 755]
,
[300, 722, 359, 755]
,
[152, 722, 297, 755]
,
[78, 722, 149, 755]
,
[43, 722, 75, 755]
,
[1010, 687, 1106, 719]
,
[1109, 686, 1205, 719]
,
[910, 686, 1007, 719]
,
[787, 686, 907, 719]
,
[687, 686, 785, 719]
,
[587, 686, 684, 719]
,
[446, 686, 584, 719]
,
[362, 686, 443, 719]
,
[300, 686, 359, 719]
,
[152, 686, 297, 719]
,
[78, 686, 149, 719]
,
[42, 686, 75, 719]
,
[1010, 651, 1106, 683]
,
[1109, 650, 1205, 683]
,
[910, 650, 1007, 683]
,
[788, 650, 907, 683]
,
[687, 650, 785, 683]
,
[587, 650, 684, 683]
,
[446, 650, 584, 683]
,
[362, 650, 443, 683]
,
[300, 650, 359, 683]
,
[152, 650, 297, 683]
,
[78, 650, 149, 683]
,
[42, 650, 75, 683]
,
[1109, 615, 1205, 648]
,
[1010, 615, 1106, 647]
,
[910, 614, 1007, 647]
,
[788, 614, 907, 647]
,
[687, 614, 785, 647]
,
[587, 614, 684, 647]
,
[446, 614, 584, 647]
,
[362, 614, 443, 647]
,
[300, 614, 359, 647]
,
[152, 614, 297, 647]
,
[78, 614, 149, 647]
,
[42, 614, 75, 648]
,
[1109, 579, 1205, 612]
,
[1010, 579, 1106, 612]
,
[910, 579, 1007, 612]
,
[788, 579, 907, 612]
,
[687, 579, 785, 611]
,
[587, 579, 684, 611]
,
[300, 579, 359, 611]
,
[152, 579, 297, 611]
,
[78, 579, 149, 611]
,
[42, 579, 75, 612]
,
[446, 578, 584, 611]
,
[362, 578, 443, 611]
,
[1109, 543, 1205, 576]
,
[1010, 543, 1106, 576]
,
[910, 543, 1007, 576]
,
[788, 543, 907, 576]
,
[687, 543, 785, 576]
,
[587, 543, 684, 576]
,
[446, 543, 584, 576]
,
[362, 543, 443, 576]
,
[300, 543, 359, 576]
,
[152, 543, 297, 576]
,
[78, 543, 149, 576]
,
[42, 543, 75, 576]
,
[1109, 507, 1205, 540]
,
[1010, 507, 1106, 540]
,
[910, 507, 1007, 540]
,
[788, 507, 907, 540]
,
[687, 507, 785, 540]
,
[587, 507, 684, 540]
,
[446, 507, 584, 540]
,
[362, 507, 443, 540]
,
[300, 507, 359, 540]
,
[152, 507, 297, 540]
,
[78, 507, 149, 540]
,
[42, 507, 75, 540]
,
[1109, 471, 1205, 504]
,
[1010, 471, 1106, 504]
,
[910, 471, 1007, 504]
,
[788, 471, 907, 504]
,
[687, 471, 785, 504]
,
[587, 471, 684, 504]
,
[446, 471, 584, 504]
,
[362, 471, 443, 504]
,
[300, 471, 359, 504]
,
[152, 471, 297, 504]
,
[78, 471, 149, 504]
,
[42, 471, 75, 504]
,
[1109, 436, 1205, 468]
,
[1010, 435, 1106, 468]
,
[910, 435, 1007, 468]
,
[788, 435, 907, 468]
,
[687, 435, 785, 468]
,
[587, 435, 684, 468]
,
[446, 435, 584, 468]
,
[362, 435, 443, 468]
,
[300, 435, 359, 468]
,
[152, 435, 297, 468]
,
[78, 435, 149, 468]
,
[42, 435, 75, 468]
,
[1109, 400, 1205, 433]
,
[1010, 400, 1106, 433]
,
[910, 400, 1007, 432]
,
[788, 400, 907, 432]
,
[687, 400, 785, 432]
,
[362, 400, 443, 432]
,
[300, 400, 359, 432]
,
[152, 400, 297, 432]
,
[78, 400, 149, 432]
,
[587, 399, 684, 432]
,
[446, 399, 584, 432]
,
[42, 399, 75, 433]
,
[1109, 364, 1205, 397]
,
[1010, 364, 1106, 397]
,
[910, 364, 1007, 397]
,
[788, 364, 907, 397]
,
[687, 364, 785, 397]
,
[587, 364, 684, 397]
,
[446, 364, 584, 397]
,
[362, 364, 443, 397]
,
[300, 364, 359, 397]
,
[152, 364, 297, 397]
,
[78, 364, 149, 397]
,
[42, 364, 75, 397]
,
[1109, 328, 1205, 361]
,
[1010, 328, 1106, 361]
,
[910, 328, 1007, 361]
,
[788, 328, 907, 361]
,
[687, 328, 785, 361]
,
[587, 328, 684, 361]
,
[446, 328, 584, 361]
,
[362, 328, 443, 361]
,
[300, 328, 359, 361]
,
[152, 328, 297, 361]
,
[78, 328, 149, 361]
,
[42, 328, 75, 361]
,
[1109, 292, 1205, 325]
,
[1010, 292, 1106, 325]
,
[910, 292, 1007, 325]
,
[788, 292, 907, 325]
,
[687, 292, 785, 325]
,
[587, 292, 684, 325]
,
[446, 292, 584, 325]
,
[362, 292, 443, 325]
,
[300, 292, 359, 325]
,
[152, 292, 297, 325]
,
[78, 292, 149, 325]
,
[42, 292, 75, 325]
,
[1109, 256, 1205, 289]
,
[1010, 256, 1106, 289]
,
[910, 256, 1007, 289]
,
[788, 256, 908, 289]
,
[687, 256, 785, 289]
,
[587, 256, 684, 289]
,
[446, 256, 584, 289]
,
[362, 256, 443, 289]
,
[300, 256, 359, 289]
,
[152, 256, 297, 289]
,
[78, 256, 149, 289]
,
[42, 256, 75, 289]
,
[1109, 220, 1205, 253]
,
[1010, 220, 1106, 253]
,
[910, 220, 1007, 253]
,
[788, 220, 907, 253]
,
[687, 220, 785, 253]
,
[587, 220, 684, 253]
,
[446, 220, 584, 253]
,
[362, 220, 443, 253]
,
[300, 220, 359, 253]
,
[152, 220, 297, 253]
,
[78, 220, 149, 253]
,
[42, 220, 75, 253]
,
[1109, 184, 1205, 217]
,
[1010, 184, 1106, 217]
,
[910, 184, 1007, 217]
,
[788, 184, 908, 217]
,
[687, 184, 785, 217]
,
[587, 184, 684, 217]
,
[446, 184, 584, 217]
,
[362, 184, 443, 217]
,
[300, 184, 359, 217]
,
[152, 184, 297, 217]
,
[78, 184, 149, 217]
,
[42, 184, 75, 218]
,
[1109, 149, 1205, 181]
,
[1010, 148, 1106, 181]
,
[911, 148, 1007, 181]
,
[788, 148, 908, 181]
,
[687, 148, 785, 181]
,
[587, 148, 684, 181]
,
[446, 148, 584, 181]
,
[362, 148, 443, 181]
,
[300, 148, 359, 181]
,
[152, 148, 297, 182]
,
[78, 148, 149, 182]
,
[43, 148, 75, 182]
,
[152, 113, 297, 146]
,
[78, 113, 149, 146]
,
[1109, 112, 1205, 146]
,
[1010, 112, 1106, 145]
,
[910, 112, 1007, 145]
,
[788, 112, 908, 145]
,
[687, 112, 785, 145]
,
[587, 112, 684, 145]
,
[446, 112, 584, 145]
,
[362, 112, 443, 145]
,
[300, 112, 359, 145]
,
[43, 112, 75, 146]
,
[78, 77, 149, 110]
,
[43, 77, 75, 110]
,
[1109, 76, 1205, 110]
,
[1010, 76, 1106, 109]
,
[910, 76, 1008, 109]
,
[788, 76, 908, 109]
,
[687, 76, 785, 109]
,
[587, 76, 684, 109]
,
[446, 76, 584, 109]
,
[362, 76, 443, 110]
,
[300, 76, 359, 110]
,
[152, 76, 297, 110]
,
[78, 41, 149, 74]
,
[43, 41, 75, 74]
,
[1109, 40, 1206, 74]
,
[1010, 40, 1106, 73]
,
[910, 40, 1008, 73]
,
[788, 40, 908, 73]
,
[687, 40, 785, 73]
,
[587, 40, 684, 73]
,
[446, 40, 584, 73]
,
[362, 40, 443, 73]
,
[299, 40, 359, 74]
,
[152, 40, 297, 74]
]

# Đường dẫn ảnh đầu vào
input_image_path = "./image/6_3.png"  # Đổi thành đường dẫn ảnh của bạn
output_image_path = "./image/output.jpg"

# Đọc ảnh
image = cv2.imread(input_image_path)

# Kiểm tra nếu ảnh được đọc thành công
if image is None:
    print("Không thể đọc ảnh, vui lòng kiểm tra đường dẫn.")
else:
    # Duyệt qua từng tọa độ trong danh sách và vẽ hình chữ nhật
    for box in bounding_boxes:
        min_x, min_y, max_x, max_y = box
        # Vẽ hình chữ nhật trên ảnh (ô viền màu đỏ, dày 2px)
        cv2.rectangle(image, (min_x, min_y), (max_x, max_y), (0, 0, 255), 1)

    # Lưu ảnh đã được vẽ viền
    cv2.imwrite(output_image_path, image)
    print(f"Ảnh đã được lưu tại: {output_image_path}")

    # Hiển thị ảnh (tuỳ chọn)
    cv2.imshow("Image with Bounding Boxes", image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
